{"version":3,"sources":["components/NotFoundPage/NotFoundPage.tsx","components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","className","Navigation","role","to","isActive","cn","HomePage","Loader","PersonLink","props","person","selectPerson","sex","slug","onClick","name","PeopleTable","people","useState","selectedPersonSlug","setSelectedPersonSlug","getParent","parentName","find","preparedPersonList","map","mother","motherName","father","fatherName","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","res","catch","finally","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"qPAAaA,EAAe,WAC1B,OACE,oBAAIC,UAAU,QAAd,2BAEH,E,gBCDYC,EAAa,WACxB,OACE,qBACE,UAAQ,MACRD,UAAU,iCACVE,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,kBAWA,cAAC,IAAD,CACED,GAAG,SACHH,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,0BAaT,ECrCYE,EAAW,WACtB,OACE,oBAAIN,UAAU,QAAd,sBAEH,E,cCFYO,G,MAAS,kBACpB,qBAAKP,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,G,OCQTQ,EAAwB,SAACC,GACpC,IAAQC,EAAyBD,EAAzBC,OAAQC,EAAiBF,EAAjBE,aAEhB,OACE,cAAC,IAAD,CACEX,UAAWK,IAAG,CAAE,kBAAkC,MAAfK,EAAOE,MAC1CT,GAAE,kBAAaO,EAAOG,MACtBC,QAAS,kBAAMH,EAAaD,EAAOG,KAA1B,EAHX,SAKGH,EAAOK,MAGb,ECbYC,EAA+B,SAACP,GAC3C,IAAQQ,EAAWR,EAAXQ,OACR,EAAoDC,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KAEMC,EAAY,SAACC,GACjB,GAAIA,EACF,OAAOL,EAAOM,MAAK,SAAAb,GAAM,OAAIA,EAAOK,OAASO,CAApB,GAI5B,EAEKE,EAAqBP,EAAOQ,KAAI,SAAAf,GAAM,kCAErCA,GAFqC,IAGxCgB,OAAQL,EAAUX,EAAOiB,YACzBC,OAAQP,EAAUX,EAAOmB,aAJe,IAQ5C,OAEE,wBACE,UAAQ,cACR7B,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCAEGwB,EAAmBC,KAAI,SAAAf,GAAM,OAC5B,qBAEE,UAAQ,SACRV,UAAWK,IAAG,CACZ,yBAA0BK,EAAOG,OAASM,IAJ9C,UAOE,6BACE,cAAC,EAAD,CACET,OAAQA,EACRC,aAAcS,MAIlB,6BAAKV,EAAOE,MACZ,6BAAKF,EAAOoB,OACZ,6BAAKpB,EAAOqB,OACXrB,EAAOgB,OACN,6BACE,cAAC,EAAD,CACEhB,OAAQA,EAAOgB,OACff,aAAcS,MAIlB,6BACGV,EAAOiB,WACNjB,EAAOiB,WAEP,MAKLjB,EAAOkB,OACN,6BACE,cAAC,EAAD,CACElB,OAAQA,EAAOkB,OACfjB,aAAcS,MAIlB,6BACGV,EAAOmB,WACNnB,EAAOmB,WAEP,QA7CDnB,EAAOG,KAFc,QAyDrC,EChGM,SAASmB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCRM,IAAMQ,EAAa,WACxB,MAA4BvB,mBAAmB,IAA/C,mBAAOD,EAAP,KAAeyB,EAAf,KACA,EAA8BxB,oBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KACA,EAAkC1B,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WACRf,IACGK,MAAK,SAAAW,GAAG,OAAIN,EAAUM,EAAd,IACRC,OAAM,kBAAML,GAAW,EAAjB,IACNM,SAAQ,kBAAMJ,GAAa,EAAnB,GACZ,GAAE,IAGD,qBAAK9C,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG6C,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CAAa5B,OAAQA,IAGtB0B,GACC,mBAAG,UAAQ,qBAAqB3C,UAAU,kBAA1C,mCAKA6C,IAAcF,GAA6B,IAAlB1B,EAAOkC,QAChC,mBAAG,UAAQ,kBAAX,mDAOT,EC9BYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMpD,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUnD,GAAG,IAAIoD,SAAO,MACpD,cAAC,IAAD,CACEF,KAAK,SACLC,QACE,qCACE,oBAAItD,UAAU,QAAd,yBACA,cAAC,EAAD,OALN,SASE,cAAC,IAAD,CAAOqD,KAAK,QAAQC,QAAS,cAAC,EAAD,QAE/B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,cAAC,EAAD,eAtBF,ECHnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.f9a39632.chunk.js","sourcesContent":["export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  selectPerson: CallableFunction,\n};\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person, selectPerson } = props;\n\n  return (\n    <Link\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n      to={`/people/${person.slug}`}\n      onClick={() => selectPerson(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = (props) => {\n  const { people } = props;\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState('');\n\n  const getParent = (parentName: string | null) => {\n    if (parentName) {\n      return people.find(person => person.name === parentName);\n    }\n\n    return undefined;\n  };\n\n  const preparedPersonList = people.map(person => (\n    {\n      ...person,\n      mother: getParent(person.motherName),\n      father: getParent(person.fatherName),\n    }\n  ));\n\n  return (\n\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {preparedPersonList.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={cn({\n              'has-background-warning': person.slug === selectedPersonSlug,\n            })}\n          >\n            <td>\n              <PersonLink\n                person={person}\n                selectPerson={setSelectedPersonSlug}\n              />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {person.mother ? (\n              <td>\n                <PersonLink\n                  person={person.mother}\n                  selectPerson={setSelectedPersonSlug}\n                />\n              </td>\n            ) : (\n              <td>\n                {person.motherName ? (\n                  person.motherName\n                ) : (\n                  '-'\n                )}\n              </td>\n            )}\n\n            {person.father ? (\n              <td>\n                <PersonLink\n                  person={person.father}\n                  selectPerson={setSelectedPersonSlug}\n                />\n              </td>\n            ) : (\n              <td>\n                {person.fatherName ? (\n                  person.fatherName\n                ) : (\n                  '-'\n                )}\n              </td>\n            )}\n\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then(res => setPeople(res))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <PeopleTable people={people} />\n        )}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isLoading && !isError && people.length === 0 && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.css';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route\n            path=\"people\"\n            element={(\n              <>\n                <h1 className=\"title\">People Page</h1>\n                <PeoplePage />\n              </>\n            )}\n          >\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}